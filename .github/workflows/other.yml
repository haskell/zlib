name: other
on:
  - push
  - pull_request

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, macOS-latest]
        ghc: ['latest']
    steps:
    - uses: actions/checkout@v4
    - uses: haskell-actions/setup@v2
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-update: true
    - uses: actions/cache@v3
      name: Cache cabal stuff
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-ghc-${{ steps.setup-haskell-cabal.outputs.ghc-version }}
    - name: Build
      run: |
        cabal sdist -z -o .
        cabal get zlib-*.tar.gz
        cd zlib-*/
        cabal build
    - name: Haddock
      run: |
        cd zlib-*/
        cabal haddock

  wasi:
    runs-on: ubuntu-latest
    env:
      GHC_WASM_META_REV: c0aa3bb7d88bb6ec809210e17658dd1ed64ba66c
    strategy:
      matrix:
        ghc: ['9.6', '9.8']
      fail-fast: false
    steps:
    - name: setup-ghc-wasm32-wasi
      run: |
        cd $(mktemp -d)
        curl -L https://gitlab.haskell.org/ghc/ghc-wasm-meta/-/archive/$GHC_WASM_META_REV/ghc-wasm-meta.tar.gz | tar xz --strip-components=1
        ./setup.sh
        ~/.ghc-wasm/add_to_github_path.sh
      env:
        FLAVOUR: ${{ matrix.ghc }}
    - uses: actions/checkout@v4
    - uses: actions/cache@v3
      with:
        path: |
          ~/.ghc-wasm/.cabal/store
        key: wasi-${{ runner.os }}-${{ env.GHC_WASM_META_REV }}-flavour-${{ matrix.ghc }}-${{ github.sha }}
        restore-keys: |
          wasi-${{ runner.os }}-${{ env.GHC_WASM_META_REV }}-flavour-${{ matrix.ghc }}-
    - name: Build
      run: |
        mv cabal.project.wasi cabal.project.local
        wasm32-wasi-cabal build --enable-tests
        wasm32-wasi-cabal list-bin test:tests
    - name: Test
      run: |
        wasmtime.sh $(wasm32-wasi-cabal list-bin test:tests)
